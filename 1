def func1(arg1, arg2):
    var55 = func2(arg1, arg2)
    var56 = 171861084 - arg2 ^ arg1 + -286 & 489751216 - var55 + arg1 + arg2
    var57 = ((arg1 | (var55 - var56 ^ arg1 & 360 - 698) + var55 + (arg1 | (var55 & (var55 & -1748936008 | (arg1 | (arg1 - arg2) - arg2 - var55))) | var55 | 1843549070) | arg2 | 628085769) & arg2) - 1381698083
    var58 = (((arg2 ^ (1630103481 & -443)) + var56) ^ 697) ^ (var57 ^ var55 & (var55 - var56 | var55 - var57)) ^ var56 - arg2
    result = arg1 ^ -211 | (var55 | arg1) | arg1 | var55 - var56
    return result
def func2(arg3, arg4):
    var5 = 0
    for var54 in [-5 & (-6 | (arg4 & arg3 & arg3 ^ (arg4 & i - i) | arg4 - -4) + i) - arg4 for i in func3(var5, arg4)]:
        var5 += var5 - var5 ^ arg3
    return var5
def func4(arg8, arg9):
    var10 = func7()
    def func8(arg11, arg12):
        var13 = (arg9 | arg8 + arg11) - arg9
        var14 = (arg12 | arg8 + 1585777594) ^ arg12
        var15 = -1878115165 ^ arg8 ^ (var14 | var14)
        var16 = ((arg9 - arg12) | 205) + arg12
        var17 = ((var15 & var13) | var14) | var14
        var18 = var10 & var16
        var19 = ((var17 & var13) | var14) & arg9
        var20 = arg8 + var16 | 520 ^ var16
        if arg9 < var19:
            var21 = var18 | var10 ^ var15 - var14
        else:
            var21 = (arg12 ^ var20 | arg9) ^ -1498047467
        var22 = arg8 + (arg11 + arg12) + var17
        result = arg11 - var10
        return result
    var23 = func8(arg8, arg9)
    var24 = arg8 + 775973482
    var25 = var23 - (arg8 - var24) + var24
    var26 = 1783586835 + var24 & arg8
    var27 = (arg9 - (arg9 + var26)) & arg8
    var28 = arg8 | var25 ^ (arg8 ^ var23)
    var29 = var27 + var27 & var23
    var30 = (var23 & (-1285098741 | arg9)) & var29
    if var23 < var30:
        var31 = (var28 | var10) & var30
    else:
        var31 = (-2135278894 - (var23 ^ var28)) ^ 780
    if arg8 < var30:
        var32 = var10 ^ arg9 ^ arg8 | var25
    else:
        var32 = var28 - -1876373685 ^ var29 | -1820913459
    var33 = var29 ^ -1414614454
    var34 = (var24 | (var24 | var29)) | arg9
    if var25 < arg9:
        var35 = var29 | (var23 & var26 - var29)
    else:
        var35 = var30 - ((var34 & 908646740) ^ 742251031)
    var36 = (var27 | var33) | 257669505 ^ arg9
    var37 = var26 ^ var28 ^ arg8
    if var27 < var29:
        var38 = ((var36 + var10) - var37) & var30
    else:
        var38 = (var23 - var27) & var37 - var36
    if var33 < var24:
        var39 = var37 | ((490760902 & var26) ^ var24)
    else:
        var39 = var29 + var36
    var40 = ((var36 ^ var36) | var30) ^ var34
    var41 = var33 + var27
    var42 = var25 + var25
    result = var41 + var25
    return result
def func7():
    func5()
    result = len(xrange(38))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -2
def func3(arg6, arg7):
    var43 = func4(1165169133, -750)
    yield var43
    var44 = -954904927 + arg6 | arg6 + -1485284720
    yield var44
    var45 = arg6 + arg6
    yield var45
    var46 = -476830037 ^ ((var45 - arg6) + -450)
    yield var46
    var47 = arg7 ^ ((490 | arg7) & var46)
    yield var47
    var48 = (var45 + var45 - -1888529251) | var44
    yield var48
    var49 = (arg7 & var45) + arg7 ^ var48
    yield var49
    var50 = (var45 + var48 ^ arg7) + var47
    yield var50
    var51 = var45 ^ var46
    yield var51
    var52 = var51 | (2053185724 | var48)
    yield var52
    var53 = var51 | var47 | var50 + var52
    yield var53
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
